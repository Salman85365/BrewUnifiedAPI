version: '3'

services:
  db_warehouse:
    image: postgres:14.0-alpine
    container_name: db_warehouse
    environment:
      - POSTGRES_DB=${WAREHOUSE_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - warehouse-database:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - 5431:5432

  db_accounts:
    image: postgres:14.0-alpine
    container_name: db_accounts
    environment:
      - POSTGRES_DB=${ACCOUNTS_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - accounts-database:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - 5433:5432

  db_sales:
    image: postgres:14.0-alpine
    container_name: db_sales
    environment:
      - POSTGRES_DB=${SALES_DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - sales-database:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - 5434:5432
  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yml"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    volumes:
      - ./kong.yml:/etc/kong/kong.yml
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8101:8001"
      - "8444:8444"

  warehouse:
    build:
        context: ./services/warehouse
        dockerfile: Dockerfile
    environment:
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - WAREHOUSE_DB_NAME=${WAREHOUSE_DB_NAME}
        - DB_HOST=db_warehouse
        - DB_PORT=${DB_PORT}
        - KONG_BASE_URL=${KONG_BASE_URL}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
        - POSTGRES=${POSTGRES}
        - WAREHOUSE_SECRET_KEY=${WAREHOUSE_SECRET_KEY}
        - DEBUG=${DEBUG}
        - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    command: ["./wait-for-it.sh", "redis:6379", "--", "python", "manage.py", "runserver", "0.0.0.0:8001"]
    volumes:
      - ./services/warehouse:/app
    stdin_open: true
    tty: true
    ports:
      - "8001:8001"
    depends_on:
      - db_warehouse
      - redis

  accounting:
    build:
        context: ./services/accounting
        dockerfile: Dockerfile
    environment:
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - ACCOUNTS_DB_NAME=${ACCOUNTS_DB_NAME}
        - DB_HOST=db_accounts
        - DB_PORT=${DB_PORT}
        - KONG_BASE_URL=${KONG_BASE_URL}
        - POSTGRES=${POSTGRES}
        - ACCOUNTING_SECRET_KEY=${ACCOUNTING_SECRET_KEY}
        - DEBUG=${DEBUG}
        - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    command: python manage.py runserver 0.0.0.0:8002
    volumes:
      - ./services/accounting:/app
    stdin_open: true
    tty: true
    ports:
      - "8002:8002"
    depends_on:
      - db_accounts

  sales:
    build:
        context: ./services/sales
        dockerfile: Dockerfile
    environment:
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - SALES_DB_NAME=${SALES_DB_NAME}
        - DB_HOST=db_sales
        - DB_PORT=${DB_PORT}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
        - KONG_BASE_URL=${KONG_BASE_URL}
        - POSTGRES=${POSTGRES}
        - SALES_SECRET_KEY=${SALES_SECRET_KEY}
        - DEBUG=${DEBUG}
        - ALLOWED_HOSTS=${ALLOWED_HOSTS}
        - SENDGRID_EMAIL_API_KEY=${SENDGRID_EMAIL_API_KEY}
        - FROM_EMAIL=${FROM_EMAIL}
    command: ["./wait-for-it.sh", "redis:6379", "--", "python", "manage.py", "runserver", "0.0.0.0:8003"]
    volumes:
      - ./services/sales:/app
    stdin_open: true
    tty: true
    ports:
      - "8003:8003"

  celery:
    build:
        context: ./services/sales
        dockerfile: Dockerfile
    command: celery -A sales worker --loglevel=info
    environment:
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - SALES_DB_NAME=${SALES_DB_NAME}
        - DB_HOST=db_sales
        - DB_PORT=${DB_PORT}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
        - SALES_SECRET_KEY=${SALES_SECRET_KEY}
        - DEBUG=${DEBUG}
        - ALLOWED_HOSTS=${ALLOWED_HOSTS}
        - SENDGRID_EMAIL_API_KEY=${SENDGRID_EMAIL_API_KEY}
        - FROM_EMAIL=${FROM_EMAIL}
        - POSTGRES=${POSTGRES}
        - KONG_BASE_URL=${KONG_BASE_URL}
    volumes:
      - .:/code
    depends_on:
      - sales
      - redis

  redis:
    image: "redis:alpine"

volumes:
  warehouse-database:
  accounts-database:
  sales-database:

